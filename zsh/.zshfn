# cd back x times
gb() {
        if [[ ! $1 =~ ^([1-9]|)$ ]]; then
                echo "USAGE: gb <int>"
                return
        fi
         
        local COMMAND=""
        local NUM=$1 && [ -z $1 ] && local NUM=1
         
        for i in {1..$NUM}; do
                COMMAND="$COMMAND../"
	done
  
	cd $COMMAND
}

# switch file name
rep() {
	if [[ -z $1 || ! -f $1 ]] || [[ -z $2 || ! -f $2 ]]; then 
		echo "USAGE: rep <file1> <file2>"
		return
	fi

	mv $1 temp &&
	mv $2 $1 &&
	mv temp $2
}

# network usage
nusage() {
	local NET_INT=$(ip a | grep 'state UP' | awk '{print $2}' | tr -d ':' | head -n1)
	local NET=$(cat /sys/class/net/$NET_INT/statistics/rx_bytes | numfmt --to=iec)

	echo "Network usage since boot: $NET"
}

# cd + ls
cdp()
{ 
	cd $1 && ls 
}

# revert the VM snapshot
vmrevert()
{
	sudo virsh snapshot-revert --domain $1 --snapshotname $2	
}

# delete the VM snapshot
vmdel()
{
	sudo virsh snapshot-delete --domain $1 --snapshotname $2	
}

# create the VM snapshot
vmcreate()
{
	if [ -z $1 ] || [ -z $2 ] || [ -z $3 ]; then
		echo "Usage: vmcreate <domain> <snapshotname> <description>"
		return
	fi

	sudo virsh snapshot-create-as --domain $1 --name $2 --description $3
}

mnt()
{
    sudo mount /dev/$1 /mnt	
}

dmnt()
{
    sudo umount /dev/$1	
}

mvcd()
{
    if [ -z $1 ] || [ -z $2 ]; then
        echo "USAGE: mvandcd <file> <moveto>"
        return
    fi

    if [ ! -d "$2" ]; then
	mkdir $2
    fi

    mv $1 $2 && cd $2 && ls
}

dmntluks()
{
    NAME=$1
    CUSER=$USER
    DPATH=/run/media/$CUSER/$NAME
                                              
    if [[ -z "$1" ]]; then
        echo "Usage: <mountname>"
        return 1
    fi

    sudo umount $DPATH
    sudo cryptsetup close $NAME

    if (( $? != 0 )); then
        echo "ERROR. Try again"
        return 2
    fi

    sudo rmdir $DPATH
}

mntluks()
{
    PART=$1
    NAME=$2
    CUSER=$USER
    DPATH=/run/media/$CUSER/$NAME

    if [[ -z "$1" || -z "$2" ]]; then
	echo "Usage: <partition> <mountname>"
	return 1
    fi

    sudo mkdir -p $DPATH 

    sudo cryptsetup open /dev/$PART $NAME
    sudo mount /dev/mapper/$NAME $DPATH

    sudo chown $CUSER:$CUSER $DPATH 

    if (( $? != 0 )); then
	echo "ERROR. Try again"
	rmdir $DPATH

	return 2
    fi

    echo "Mounted at: $DPATH"
}

# Count files
getcount()
{
    [ -z $1 ] && DIRPATH="." || DIRPATH="$1"

    find $DIRPATH -type f | wc -l	
}

# aur
aurgit()
{
    if [ -z $1 ]; then
	echo "Usage: aurgit <package-name>"
	return
    fi

    git clone --branch $1 --single-branch https://github.com/archlinux/aur.git $1
}


